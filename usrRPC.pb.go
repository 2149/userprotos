// Code generated by protoc-gen-go. DO NOT EDIT.
// source: usrRPC.proto

package usrproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HelloRequest struct {
	ID                   uint64   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_usrRPC_6a6ace4ddf041126, []int{0}
}
func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (dst *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(dst, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

type HelloReply struct {
	PID                  uint64   `protobuf:"varint,1,opt,name=PID,proto3" json:"PID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloReply) Reset()         { *m = HelloReply{} }
func (m *HelloReply) String() string { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()    {}
func (*HelloReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_usrRPC_6a6ace4ddf041126, []int{1}
}
func (m *HelloReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloReply.Unmarshal(m, b)
}
func (m *HelloReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloReply.Marshal(b, m, deterministic)
}
func (dst *HelloReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloReply.Merge(dst, src)
}
func (m *HelloReply) XXX_Size() int {
	return xxx_messageInfo_HelloReply.Size(m)
}
func (m *HelloReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloReply.DiscardUnknown(m)
}

var xxx_messageInfo_HelloReply proto.InternalMessageInfo

func (m *HelloReply) GetPID() uint64 {
	if m != nil {
		return m.PID
	}
	return 0
}

type Labels struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Labels) Reset()         { *m = Labels{} }
func (m *Labels) String() string { return proto.CompactTextString(m) }
func (*Labels) ProtoMessage()    {}
func (*Labels) Descriptor() ([]byte, []int) {
	return fileDescriptor_usrRPC_6a6ace4ddf041126, []int{2}
}
func (m *Labels) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Labels.Unmarshal(m, b)
}
func (m *Labels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Labels.Marshal(b, m, deterministic)
}
func (dst *Labels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Labels.Merge(dst, src)
}
func (m *Labels) XXX_Size() int {
	return xxx_messageInfo_Labels.Size(m)
}
func (m *Labels) XXX_DiscardUnknown() {
	xxx_messageInfo_Labels.DiscardUnknown(m)
}

var xxx_messageInfo_Labels proto.InternalMessageInfo

func (m *Labels) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Labels) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type StoreInfo struct {
	ID                   uint64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Available            uint64    `protobuf:"varint,2,opt,name=available,proto3" json:"available,omitempty"`
	UsedSize             uint64    `protobuf:"varint,3,opt,name=usedSize,proto3" json:"usedSize,omitempty"`
	Capacity             uint64    `protobuf:"varint,4,opt,name=capacity,proto3" json:"capacity,omitempty"`
	RegionSize           int64     `protobuf:"varint,5,opt,name=regionSize,proto3" json:"regionSize,omitempty"`
	RegionWeight         float32   `protobuf:"fixed32,6,opt,name=regionWeight,proto3" json:"regionWeight,omitempty"`
	Labels               []*Labels `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *StoreInfo) Reset()         { *m = StoreInfo{} }
func (m *StoreInfo) String() string { return proto.CompactTextString(m) }
func (*StoreInfo) ProtoMessage()    {}
func (*StoreInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_usrRPC_6a6ace4ddf041126, []int{3}
}
func (m *StoreInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreInfo.Unmarshal(m, b)
}
func (m *StoreInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreInfo.Marshal(b, m, deterministic)
}
func (dst *StoreInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreInfo.Merge(dst, src)
}
func (m *StoreInfo) XXX_Size() int {
	return xxx_messageInfo_StoreInfo.Size(m)
}
func (m *StoreInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreInfo.DiscardUnknown(m)
}

var xxx_messageInfo_StoreInfo proto.InternalMessageInfo

func (m *StoreInfo) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *StoreInfo) GetAvailable() uint64 {
	if m != nil {
		return m.Available
	}
	return 0
}

func (m *StoreInfo) GetUsedSize() uint64 {
	if m != nil {
		return m.UsedSize
	}
	return 0
}

func (m *StoreInfo) GetCapacity() uint64 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *StoreInfo) GetRegionSize() int64 {
	if m != nil {
		return m.RegionSize
	}
	return 0
}

func (m *StoreInfo) GetRegionWeight() float32 {
	if m != nil {
		return m.RegionWeight
	}
	return 0
}

func (m *StoreInfo) GetLabels() []*Labels {
	if m != nil {
		return m.Labels
	}
	return nil
}

type StoreRequest struct {
	Valid                bool     `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	RegionID             uint64   `protobuf:"varint,2,opt,name=regionID,proto3" json:"regionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreRequest) Reset()         { *m = StoreRequest{} }
func (m *StoreRequest) String() string { return proto.CompactTextString(m) }
func (*StoreRequest) ProtoMessage()    {}
func (*StoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_usrRPC_6a6ace4ddf041126, []int{4}
}
func (m *StoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreRequest.Unmarshal(m, b)
}
func (m *StoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreRequest.Marshal(b, m, deterministic)
}
func (dst *StoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreRequest.Merge(dst, src)
}
func (m *StoreRequest) XXX_Size() int {
	return xxx_messageInfo_StoreRequest.Size(m)
}
func (m *StoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StoreRequest proto.InternalMessageInfo

func (m *StoreRequest) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *StoreRequest) GetRegionID() uint64 {
	if m != nil {
		return m.RegionID
	}
	return 0
}

type StoreReply struct {
	Stores               []*StoreInfo `protobuf:"bytes,1,rep,name=stores,proto3" json:"stores,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *StoreReply) Reset()         { *m = StoreReply{} }
func (m *StoreReply) String() string { return proto.CompactTextString(m) }
func (*StoreReply) ProtoMessage()    {}
func (*StoreReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_usrRPC_6a6ace4ddf041126, []int{5}
}
func (m *StoreReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreReply.Unmarshal(m, b)
}
func (m *StoreReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreReply.Marshal(b, m, deterministic)
}
func (dst *StoreReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreReply.Merge(dst, src)
}
func (m *StoreReply) XXX_Size() int {
	return xxx_messageInfo_StoreReply.Size(m)
}
func (m *StoreReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreReply.DiscardUnknown(m)
}

var xxx_messageInfo_StoreReply proto.InternalMessageInfo

func (m *StoreReply) GetStores() []*StoreInfo {
	if m != nil {
		return m.Stores
	}
	return nil
}

type ScheduleRequest struct {
	Kind                 uint32   `protobuf:"varint,1,opt,name=kind,proto3" json:"kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScheduleRequest) Reset()         { *m = ScheduleRequest{} }
func (m *ScheduleRequest) String() string { return proto.CompactTextString(m) }
func (*ScheduleRequest) ProtoMessage()    {}
func (*ScheduleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_usrRPC_6a6ace4ddf041126, []int{6}
}
func (m *ScheduleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScheduleRequest.Unmarshal(m, b)
}
func (m *ScheduleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScheduleRequest.Marshal(b, m, deterministic)
}
func (dst *ScheduleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScheduleRequest.Merge(dst, src)
}
func (m *ScheduleRequest) XXX_Size() int {
	return xxx_messageInfo_ScheduleRequest.Size(m)
}
func (m *ScheduleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScheduleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScheduleRequest proto.InternalMessageInfo

func (m *ScheduleRequest) GetKind() uint32 {
	if m != nil {
		return m.Kind
	}
	return 0
}

type ScheduleReply struct {
	Allowed              bool     `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScheduleReply) Reset()         { *m = ScheduleReply{} }
func (m *ScheduleReply) String() string { return proto.CompactTextString(m) }
func (*ScheduleReply) ProtoMessage()    {}
func (*ScheduleReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_usrRPC_6a6ace4ddf041126, []int{7}
}
func (m *ScheduleReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScheduleReply.Unmarshal(m, b)
}
func (m *ScheduleReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScheduleReply.Marshal(b, m, deterministic)
}
func (dst *ScheduleReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScheduleReply.Merge(dst, src)
}
func (m *ScheduleReply) XXX_Size() int {
	return xxx_messageInfo_ScheduleReply.Size(m)
}
func (m *ScheduleReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ScheduleReply.DiscardUnknown(m)
}

var xxx_messageInfo_ScheduleReply proto.InternalMessageInfo

func (m *ScheduleReply) GetAllowed() bool {
	if m != nil {
		return m.Allowed
	}
	return false
}

type OpRequest struct {
	Kind                 uint32   `protobuf:"varint,1,opt,name=kind,proto3" json:"kind,omitempty"`
	RegionID             uint64   `protobuf:"varint,2,opt,name=regionID,proto3" json:"regionID,omitempty"`
	OldStore             uint64   `protobuf:"varint,3,opt,name=oldStore,proto3" json:"oldStore,omitempty"`
	NewStore             uint64   `protobuf:"varint,4,opt,name=newStore,proto3" json:"newStore,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpRequest) Reset()         { *m = OpRequest{} }
func (m *OpRequest) String() string { return proto.CompactTextString(m) }
func (*OpRequest) ProtoMessage()    {}
func (*OpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_usrRPC_6a6ace4ddf041126, []int{8}
}
func (m *OpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpRequest.Unmarshal(m, b)
}
func (m *OpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpRequest.Marshal(b, m, deterministic)
}
func (dst *OpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpRequest.Merge(dst, src)
}
func (m *OpRequest) XXX_Size() int {
	return xxx_messageInfo_OpRequest.Size(m)
}
func (m *OpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpRequest proto.InternalMessageInfo

func (m *OpRequest) GetKind() uint32 {
	if m != nil {
		return m.Kind
	}
	return 0
}

func (m *OpRequest) GetRegionID() uint64 {
	if m != nil {
		return m.RegionID
	}
	return 0
}

func (m *OpRequest) GetOldStore() uint64 {
	if m != nil {
		return m.OldStore
	}
	return 0
}

func (m *OpRequest) GetNewStore() uint64 {
	if m != nil {
		return m.NewStore
	}
	return 0
}

type OpReply struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpReply) Reset()         { *m = OpReply{} }
func (m *OpReply) String() string { return proto.CompactTextString(m) }
func (*OpReply) ProtoMessage()    {}
func (*OpReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_usrRPC_6a6ace4ddf041126, []int{9}
}
func (m *OpReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpReply.Unmarshal(m, b)
}
func (m *OpReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpReply.Marshal(b, m, deterministic)
}
func (dst *OpReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpReply.Merge(dst, src)
}
func (m *OpReply) XXX_Size() int {
	return xxx_messageInfo_OpReply.Size(m)
}
func (m *OpReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OpReply.DiscardUnknown(m)
}

var xxx_messageInfo_OpReply proto.InternalMessageInfo

func (m *OpReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "usrproto.HelloRequest")
	proto.RegisterType((*HelloReply)(nil), "usrproto.HelloReply")
	proto.RegisterType((*Labels)(nil), "usrproto.Labels")
	proto.RegisterType((*StoreInfo)(nil), "usrproto.StoreInfo")
	proto.RegisterType((*StoreRequest)(nil), "usrproto.StoreRequest")
	proto.RegisterType((*StoreReply)(nil), "usrproto.StoreReply")
	proto.RegisterType((*ScheduleRequest)(nil), "usrproto.ScheduleRequest")
	proto.RegisterType((*ScheduleReply)(nil), "usrproto.ScheduleReply")
	proto.RegisterType((*OpRequest)(nil), "usrproto.OpRequest")
	proto.RegisterType((*OpReply)(nil), "usrproto.OpReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// UsrRPCClient is the client API for UsrRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UsrRPCClient interface {
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
	GetStores(ctx context.Context, in *StoreRequest, opts ...grpc.CallOption) (*StoreReply, error)
	IsScheduleAllowed(ctx context.Context, in *ScheduleRequest, opts ...grpc.CallOption) (*ScheduleReply, error)
	CreateOperator(ctx context.Context, in *OpRequest, opts ...grpc.CallOption) (*OpReply, error)
}

type usrRPCClient struct {
	cc *grpc.ClientConn
}

func NewUsrRPCClient(cc *grpc.ClientConn) UsrRPCClient {
	return &usrRPCClient{cc}
}

func (c *usrRPCClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := c.cc.Invoke(ctx, "/usrproto.UsrRPC/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usrRPCClient) GetStores(ctx context.Context, in *StoreRequest, opts ...grpc.CallOption) (*StoreReply, error) {
	out := new(StoreReply)
	err := c.cc.Invoke(ctx, "/usrproto.UsrRPC/GetStores", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usrRPCClient) IsScheduleAllowed(ctx context.Context, in *ScheduleRequest, opts ...grpc.CallOption) (*ScheduleReply, error) {
	out := new(ScheduleReply)
	err := c.cc.Invoke(ctx, "/usrproto.UsrRPC/IsScheduleAllowed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usrRPCClient) CreateOperator(ctx context.Context, in *OpRequest, opts ...grpc.CallOption) (*OpReply, error) {
	out := new(OpReply)
	err := c.cc.Invoke(ctx, "/usrproto.UsrRPC/CreateOperator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UsrRPCServer is the server API for UsrRPC service.
type UsrRPCServer interface {
	SayHello(context.Context, *HelloRequest) (*HelloReply, error)
	GetStores(context.Context, *StoreRequest) (*StoreReply, error)
	IsScheduleAllowed(context.Context, *ScheduleRequest) (*ScheduleReply, error)
	CreateOperator(context.Context, *OpRequest) (*OpReply, error)
}

func RegisterUsrRPCServer(s *grpc.Server, srv UsrRPCServer) {
	s.RegisterService(&_UsrRPC_serviceDesc, srv)
}

func _UsrRPC_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsrRPCServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usrproto.UsrRPC/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsrRPCServer).SayHello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsrRPC_GetStores_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsrRPCServer).GetStores(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usrproto.UsrRPC/GetStores",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsrRPCServer).GetStores(ctx, req.(*StoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsrRPC_IsScheduleAllowed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScheduleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsrRPCServer).IsScheduleAllowed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usrproto.UsrRPC/IsScheduleAllowed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsrRPCServer).IsScheduleAllowed(ctx, req.(*ScheduleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsrRPC_CreateOperator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsrRPCServer).CreateOperator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usrproto.UsrRPC/CreateOperator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsrRPCServer).CreateOperator(ctx, req.(*OpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UsrRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "usrproto.UsrRPC",
	HandlerType: (*UsrRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _UsrRPC_SayHello_Handler,
		},
		{
			MethodName: "GetStores",
			Handler:    _UsrRPC_GetStores_Handler,
		},
		{
			MethodName: "IsScheduleAllowed",
			Handler:    _UsrRPC_IsScheduleAllowed_Handler,
		},
		{
			MethodName: "CreateOperator",
			Handler:    _UsrRPC_CreateOperator_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "usrRPC.proto",
}

func init() { proto.RegisterFile("usrRPC.proto", fileDescriptor_usrRPC_6a6ace4ddf041126) }

var fileDescriptor_usrRPC_6a6ace4ddf041126 = []byte{
	// 487 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0x51, 0x6b, 0xd4, 0x40,
	0x10, 0x6e, 0x72, 0xd7, 0xdc, 0x65, 0xbc, 0xd6, 0x76, 0x2d, 0x1a, 0x0f, 0x39, 0x8e, 0x15, 0x21,
	0x22, 0x1c, 0x52, 0x9f, 0xac, 0x2f, 0x4a, 0x0f, 0x34, 0x20, 0xb4, 0xec, 0x21, 0x3e, 0xef, 0xe5,
	0xc6, 0x36, 0x74, 0xb9, 0x8d, 0xd9, 0xa4, 0x25, 0xfe, 0x02, 0xff, 0xa5, 0x7f, 0x45, 0x76, 0x37,
	0x9b, 0xe4, 0xb4, 0xf4, 0x6d, 0xbe, 0xf9, 0x76, 0xe6, 0x9b, 0xf9, 0x66, 0x61, 0x52, 0xa9, 0x82,
	0x5d, 0x9e, 0x2f, 0xf2, 0x42, 0x96, 0x92, 0x8c, 0x2b, 0x55, 0x98, 0x88, 0xce, 0x60, 0xf2, 0x05,
	0x85, 0x90, 0x0c, 0x7f, 0x56, 0xa8, 0x4a, 0x72, 0x08, 0x7e, 0xb2, 0x8c, 0xbc, 0xb9, 0x17, 0x0f,
	0x99, 0x9f, 0x2c, 0xe9, 0x0c, 0xa0, 0xe1, 0x73, 0x51, 0x93, 0x23, 0x18, 0x5c, 0xb6, 0xb4, 0x0e,
	0xe9, 0x5b, 0x08, 0xbe, 0xf2, 0x35, 0x0a, 0xa5, 0xb9, 0x1b, 0xac, 0x0d, 0x17, 0x32, 0x1d, 0x92,
	0x13, 0xd8, 0xbf, 0xe5, 0xa2, 0xc2, 0xc8, 0x37, 0x39, 0x0b, 0xe8, 0x1f, 0x0f, 0xc2, 0x55, 0x29,
	0x0b, 0x4c, 0xb6, 0x3f, 0xe4, 0xbf, 0x7a, 0xe4, 0x05, 0x84, 0xfc, 0x96, 0x67, 0x82, 0xaf, 0x85,
	0xad, 0x1b, 0xb2, 0x2e, 0x41, 0xa6, 0x30, 0xae, 0x14, 0x6e, 0x56, 0xd9, 0x2f, 0x8c, 0x06, 0x86,
	0x6c, 0xb1, 0xe6, 0x52, 0x9e, 0xf3, 0x34, 0x2b, 0xeb, 0x68, 0x68, 0x39, 0x87, 0xc9, 0x0c, 0xa0,
	0xc0, 0xab, 0x4c, 0x6e, 0x4d, 0xe5, 0xfe, 0xdc, 0x8b, 0x07, 0xac, 0x97, 0x21, 0x14, 0x26, 0x16,
	0x7d, 0xc7, 0xec, 0xea, 0xba, 0x8c, 0x82, 0xb9, 0x17, 0xfb, 0x6c, 0x27, 0x47, 0x62, 0x08, 0x84,
	0xd9, 0x34, 0x1a, 0xcd, 0x07, 0xf1, 0xa3, 0xd3, 0xa3, 0x85, 0x33, 0x71, 0x61, 0x1d, 0x60, 0x0d,
	0x4f, 0x3f, 0xc2, 0xc4, 0x2c, 0xe8, 0x3c, 0xb5, 0x3e, 0x64, 0x1b, 0xb3, 0xe6, 0x98, 0x59, 0xa0,
	0xe7, 0xb5, 0xfd, 0x93, 0x65, 0xb3, 0x68, 0x8b, 0xe9, 0x7b, 0x80, 0xa6, 0x83, 0x76, 0xfd, 0x0d,
	0x04, 0x4a, 0x23, 0x15, 0x79, 0x46, 0xf9, 0x49, 0xa7, 0xdc, 0x1a, 0xc9, 0x9a, 0x27, 0xf4, 0x15,
	0x3c, 0x5e, 0xa5, 0xd7, 0xb8, 0xa9, 0x44, 0xab, 0x4f, 0x60, 0x78, 0x93, 0x6d, 0xad, 0xfc, 0x01,
	0x33, 0x31, 0x7d, 0x0d, 0x07, 0xdd, 0x33, 0x2d, 0x12, 0xc1, 0x88, 0x0b, 0x21, 0xef, 0xd0, 0x8d,
	0xe9, 0x20, 0x55, 0x10, 0x5e, 0xe4, 0x0f, 0xf4, 0x7a, 0x68, 0x13, 0xcd, 0x49, 0xb1, 0x31, 0x63,
	0xba, 0x8b, 0x39, 0xac, 0xb9, 0x2d, 0xde, 0x59, 0xae, 0xb9, 0x98, 0xc3, 0xf4, 0x25, 0x8c, 0xb4,
	0x68, 0x33, 0x99, 0xaa, 0xd2, 0x14, 0x95, 0x72, 0x93, 0x35, 0xf0, 0xf4, 0xb7, 0x0f, 0xc1, 0x37,
	0xf3, 0xaf, 0xc9, 0x19, 0x8c, 0x57, 0xbc, 0x36, 0x5f, 0x95, 0x3c, 0xed, 0xfc, 0xe9, 0xff, 0xed,
	0xe9, 0xc9, 0x7f, 0xf9, 0x5c, 0xd4, 0x74, 0x8f, 0x7c, 0x80, 0xf0, 0x33, 0x96, 0x46, 0x57, 0xf5,
	0x8b, 0xfb, 0x47, 0xec, 0x17, 0x77, 0xa7, 0xa1, 0x7b, 0x24, 0x81, 0xe3, 0x44, 0x39, 0x2b, 0x3f,
	0x59, 0xcb, 0xc8, 0xf3, 0xde, 0xe3, 0xdd, 0x63, 0x4c, 0x9f, 0xdd, 0x47, 0xd9, 0x56, 0x67, 0x70,
	0x78, 0x5e, 0x20, 0x2f, 0xf1, 0x22, 0xc7, 0x82, 0x97, 0xb2, 0x20, 0xbd, 0x4b, 0xb7, 0x27, 0x98,
	0x1e, 0xef, 0x26, 0x4d, 0xed, 0x3a, 0x30, 0x89, 0x77, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xc9,
	0xeb, 0x17, 0xae, 0xe8, 0x03, 0x00, 0x00,
}
